{"version":3,"sources":["components/NavBar.tsx","pages/NotFoundPage.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","NavBar","className","role","to","NotFoundPage","HomePage","Loader","PersonLink","person","slug","useParams","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","useEffect","peopleArray","find","pr","peopleWithParents","catch","finally","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5f5500dd.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink className={getLinkClass} to=\"/\">\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage: React.FC = () => <h1 className=\"title\">Home Page</h1>;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams<{ slug: string }>();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === person.slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother ? (\n          <Link\n            to={`/people/${person.mother?.slug}`}\n            className=\"has-text-danger\"\n          >\n            {person.mother.name}\n          </Link>\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {person.father ? (\n          <Link to={`/people/${person.father?.slug}`}>{person.father.name}</Link>\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { PersonLink } from './PersonLink';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => <PersonLink person={person} key={person.slug} />)}\n    </tbody>\n  </table>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\n\nconst peopleWithParents = (peopleArray: Person[]): Person[] => {\n  return peopleArray.map((person) => {\n    const mother = peopleArray.find((pr) => pr.name === person.motherName);\n    const father = peopleArray.find((pr) => pr.name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleArray) => setPeople(peopleWithParents(peopleArray)))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {people.length === 0 && !error && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {people.length > 0 && <PeopleTable people={people} />}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}